void setup()
{
  noInterrupts();
  
  // Protocol cu PULL-UP
  MCUCR &= ~(1 << 4);
  
  // Liniile pe 0
  DDRD = (1 << 7) | (1 << 4);
  // Coloanele pe 1
  DDRB |= 0x3C | (1 << 0);
  DDRC = 0;
  //DDRC = 0x0E;
  
  

  PORTB = 0x3C;
  
  /*
  TCCR1A = 0;                                
    TCCR1B = 0x0C; // prescalare 256, front crescator

  TCNT1 = 0;
    // formula din indrumar pt OCR1A
    OCR1A = 6250*3;

  //intrerupere de comparare timer
    TIMSK1 |= (1<<OCIE1A);
  
  // PORTD : 4 = LCHCLK
  // PORTD : 7 = SFTCLK
  // PORTB : 0 = SDI
  
  */
  interrupts();
}

unsigned char cifre[] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D,
 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71, 0x00};
unsigned char digit[] = {0x01, 0x02, 0x04, 0x08}; 

void display(unsigned char aValoare, unsigned char aDigit)
{
 unsigned char temp;
 aValoare = ~aValoare;
 PORTD = PORTD & 0x6F; // Latch =0, CLK = 0
 for(int i=7;i>=0;i--){
 PORTD = PORTD & 0x7F; //CLK=0, LATCH = 0
 temp = aValoare >>i;
 temp = temp & 0x01;
 PORTB = PORTB & 0xFE;
 PORTB = PORTB | temp; //date
 PORTD = PORTD | 0x80;//CLK=1, Latch = 0
 }
 for(int i=7;i>=0;i--){
 PORTD = PORTD & 0x7F; //CLK=0, LATCH = 0
 temp = aDigit >> i;
 temp = temp & 0x01;
 PORTB = PORTB & 0xFE;
 PORTB = PORTB | temp; //date
 PORTD = PORTD | 0x80;//CLK=1, Latch = 0
 }
 PORTD = PORTD | 0x10; //CLK=0, Latch = 1
}


// ora, minut, secunda
/*
volatile char ceas[3] = {0, 0, 0};

ISR(TIMER1_COMPA_vect) {
    ceas[2]++;
  if(ceas[2] == 60){
    ceas[2] = 0;
    ceas[1]++;
    if(ceas[1] == 60){
      ceas[1] = 0;
      ceas[0]++;
      if(ceas[0] == 24)
        ceas[0] = 0;
    }
  }
  
}
*/

volatile char col[4] = {2, 3, 4, 5};
volatile char row[4] = {2, 3, 5, 6};
volatile char tasta_matrix[4][4] = {
  {1, 2, 3, 0x0A},
  {4, 5, 6, 0x0B},
  {7, 8, 9, 0x0C},
  {0x0F, 0, 17, 0x0D}
};
volatile char pull_up_signature = 0x6C;

volatile char read_pins;

volatile unsigned char now = 0;

void getButton(char col){
  
  //
  PORTB &= ~(1 << (col + 2));
  PORTD |= pull_up_signature;
  read_pins = PIND;
  PORTB |= (1 << (col + 2));
  //
  for(int i = 0; i<4; i++)
    if( (read_pins & (1 << row[i]) ) == 0){
    display(cifre[tasta_matrix[i][col]], digit[0]);}
}

int main()
{
  setup();
  
  while (true)
  {
    for(char i = 0; i< 4; i++)
      getButton(i);
  }
}


